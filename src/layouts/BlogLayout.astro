---
export interface BlogPost {
  title: string;
  date: string;
  readTime: string;
  category: string;
  excerpt: string;
  slug?: string;
}

interface Props {
  post: BlogPost;
}

const { post } = Astro.props;
const currentYear = new Date().getFullYear();

// Generate slug from title if not provided
const slug = post.slug || post.title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
const fullUrl = `https://veronikadev.netlify.app/blog/${slug}`;
const defaultImage = "https://veronikadev.netlify.app/png/me_posing_front_google_office_with_golang_shirt.png";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={post.excerpt} />
    <meta name="keywords" content={`${post.category}, UX Design, UI Development, Veronika Flores, Google Engineer, ${post.title.split(' ').join(', ')}`} />
    <meta name="author" content="Veronika Flores" />
    <meta name="robots" content="index, follow" />
    <meta name="language" content="English" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="article" />
    <meta property="og:url" content={fullUrl} />
    <meta property="og:title" content={`${post.title} | Veronika Flores Blog`} />
    <meta property="og:description" content={post.excerpt} />
    <meta property="og:image" content={defaultImage} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content="Veronika Flores at Google Office" />
    <meta property="og:site_name" content="Veronika Flores Portfolio" />
    <meta property="og:locale" content="en_US" />
    <meta property="article:published_time" content={`${post.date}T00:00:00Z`} />
    <meta property="article:author" content="Veronika Flores" />
    <meta property="article:section" content={post.category} />
    <meta property="article:tag" content={post.category} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={fullUrl} />
    <meta property="twitter:title" content={`${post.title} | Veronika Flores Blog`} />
    <meta property="twitter:description" content={post.excerpt} />
    <meta property="twitter:image" content={defaultImage} />
    <meta property="twitter:image:alt" content="Veronika Flores at Google Office" />
    <meta property="twitter:creator" content="@deveronikkahri" />

    <!-- LinkedIn -->
    <meta property="article:author" content="Veronika Flores" />
    <meta property="article:publisher" content="https://www.linkedin.com/in/veronika-flores-8b469136b/" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={fullUrl} />

    <!-- Schema.org structured data -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        "headline": post.title,
        "description": post.excerpt,
        "image": defaultImage,
        "author": {
          "@type": "Person",
          "name": "Veronika Flores",
          "url": "https://veronikadev.netlify.app/",
          "sameAs": [
            "https://github.com/VeronikkAhri",
            "https://www.linkedin.com/in/veronika-flores-8b469136b/",
            "https://www.tiktok.com/@deveronikkahri"
          ]
        },
        "publisher": {
          "@type": "Person",
          "name": "Veronika Flores",
          "logo": {
            "@type": "ImageObject",
            "url": "https://veronikadev.netlify.app/favicon.svg"
          }
        },
        "datePublished": `${post.date}T00:00:00Z`,
        "dateModified": `${post.date}T00:00:00Z`,
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": fullUrl
        }
      }
    </script>

    <!-- Ultra-modern typography from Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@300;400;500&display=swap"
      rel="stylesheet"
    />

    <title>{post.title} • Veronika Flores</title>

    <style>
      :root {
        --color-primary: #000000;
        --color-secondary: #404040;
        --color-tertiary: #808080;
        --color-accent: #f5f5f5;
        --color-background: #ffffff;
        --color-surface: #fafafa;
        --font-primary: "Inter", -apple-system, BlinkMacSystemFont, sans-serif;
        --font-mono: "JetBrains Mono", "Courier New", monospace;
        --spacing-xs: 0.5rem;
        --spacing-sm: 1rem;
        --spacing-md: 2rem;
        --spacing-lg: 4rem;
        --spacing-xl: 6rem;
        --border-radius: 2px;
        --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      html {
        font-family: var(--font-primary);
        font-size: 16px;
        line-height: 1.6;
        scroll-behavior: smooth;
      }

      body {
        background-color: var(--color-background);
        color: var(--color-primary);
        font-weight: 400;
        overflow-x: hidden;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }

      /* Navigation */
      .nav {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        padding: var(--spacing-sm) var(--spacing-md);
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        z-index: 1000;
        transition: var(--transition);
      }

      .nav-container {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .nav-logo {
        font-family: var(--font-mono);
        font-weight: 500;
        font-size: 1.125rem;
        color: var(--color-primary);
        text-decoration: none;
      }

      .nav-links {
        display: flex;
        gap: var(--spacing-md);
        list-style: none;
      }

      .nav-link {
        color: var(--color-secondary);
        text-decoration: none;
        font-weight: 400;
        font-size: 0.9rem;
        letter-spacing: 0.5px;
        transition: var(--transition);
        text-transform: uppercase;
      }

      .nav-link:hover {
        color: var(--color-primary);
      }

      /* Article Layout */
      .article-container {
        max-width: 800px;
        margin: 0 auto;
        padding: var(--spacing-xl) var(--spacing-md);
        padding-top: calc(var(--spacing-xl) + 60px);
      }

      .article-header {
        margin-bottom: var(--spacing-lg);
        text-align: center;
      }

      .article-meta {
        display: flex;
        gap: var(--spacing-sm);
        justify-content: center;
        align-items: center;
        margin-bottom: var(--spacing-md);
        font-size: 0.875rem;
        color: var(--color-secondary);
      }

      .article-category {
        padding: 0.25rem 0.75rem;
        background: var(--color-surface);
        border-radius: var(--border-radius);
        font-family: var(--font-mono);
        font-size: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 1px;
      }

      .article-title {
        font-size: clamp(2rem, 5vw, 3rem);
        font-weight: 600;
        letter-spacing: -0.02em;
        margin-bottom: var(--spacing-sm);
        line-height: 1.1;
      }

      .article-excerpt {
        font-size: 1.125rem;
        color: var(--color-secondary);
        line-height: 1.6;
        max-width: 600px;
        margin: 0 auto;
      }

      .article-content {
        line-height: 1.8;
      }

      .article-content h2 {
        font-size: 1.75rem;
        font-weight: 600;
        margin: var(--spacing-lg) 0 var(--spacing-sm);
        color: var(--color-primary);
      }

      .article-content h3 {
        font-size: 1.25rem;
        font-weight: 500;
        margin: var(--spacing-md) 0 var(--spacing-sm);
        color: var(--color-primary);
      }

      .article-content p {
        margin-bottom: var(--spacing-sm);
        color: var(--color-secondary);
      }

      .article-content ul,
      .article-content ol {
        margin: var(--spacing-sm) 0;
        padding-left: var(--spacing-md);
      }

      .article-content li {
        margin-bottom: var(--spacing-xs);
        color: var(--color-secondary);
      }

      .article-content blockquote {
        margin: var(--spacing-md) 0;
        padding: var(--spacing-md);
        background: var(--color-surface);
        border-left: 4px solid var(--color-primary);
        font-style: italic;
      }

      .article-content code {
        font-family: var(--font-mono);
        background: var(--color-surface);
        padding: 0.2rem 0.4rem;
        border-radius: var(--border-radius);
        font-size: 0.875rem;
      }

      .back-to-blog {
        display: inline-flex;
        align-items: center;
        gap: var(--spacing-xs);
        color: var(--color-secondary);
        text-decoration: none;
        font-size: 0.9rem;
        margin-bottom: var(--spacing-md);
        transition: var(--transition);
      }

      .back-to-blog:hover {
        color: var(--color-primary);
      }

      /* Footer */
      .footer {
        border-top: 1px solid rgba(0, 0, 0, 0.1);
        padding: var(--spacing-md);
        text-align: center;
        color: var(--color-tertiary);
        font-size: 0.875rem;
        margin-top: var(--spacing-xl);
      }

      /* Responsive Design */
      @media (max-width: 768px) {
        .nav-container {
          padding: 0 var(--spacing-sm);
        }

        .nav-links {
          gap: var(--spacing-sm);
        }

        .nav-link {
          font-size: 0.8rem;
        }

        .article-container {
          padding: var(--spacing-lg) var(--spacing-sm);
          padding-top: calc(var(--spacing-lg) + 60px);
        }

        .article-meta {
          flex-direction: column;
          gap: var(--spacing-xs);
        }

        .article-content h2 {
          font-size: 1.5rem;
        }
      }

      @media (max-width: 480px) {
        .nav-container {
          flex-direction: column;
          gap: var(--spacing-xs);
          align-items: center;
        }

        .article-container {
          padding: var(--spacing-md) var(--spacing-xs);
          padding-top: calc(var(--spacing-md) + 80px);
        }
      }
    </style>
  </head>
  <body>
    <!-- Navigation -->
    <nav class="nav">
      <div class="nav-container">
        <a href="/" class="nav-logo">veronika.dev</a>
        <ul class="nav-links">
          <li><a href="/" class="nav-link">Home</a></li>
          <li><a href="/#about" class="nav-link">About</a></li>
          <li><a href="/#skills" class="nav-link">Skills</a></li>
          <li><a href="/blog" class="nav-link">Blog</a></li>
          <li><a href="/#contact" class="nav-link">Contact</a></li>
        </ul>
      </div>
    </nav>

    <!-- Article Content -->
    <main class="article-container">
      <header class="article-header">
        <a href="/blog" class="back-to-blog">
          ← Back to Blog
        </a>
        
        <div class="article-meta">
          <span class="article-category">{post.category}</span>
          <span>•</span>
          <time datetime={post.date}>{new Date(post.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</time>
          <span>•</span>
          <span>{post.readTime}</span>
        </div>

        <h1 class="article-title">{post.title}</h1>
        <p class="article-excerpt">{post.excerpt}</p>
      </header>

      <article class="article-content">
        <slot />
      </article>
    </main>

    <!-- Footer -->
    <footer class="footer">
      <p>&copy; {currentYear} Veronika Flores. Crafted with passion using Astro.</p>
    </footer>

    <script>
      // Navigation background on scroll
      window.addEventListener("scroll", () => {
        const nav = document.querySelector(".nav");
        if (nav) {
          if (window.scrollY > 100) {
            (nav as HTMLElement).style.background = "rgba(255, 255, 255, 0.98)";
          } else {
            (nav as HTMLElement).style.background = "rgba(255, 255, 255, 0.95)";
          }
        }
      });
    </script>
  </body>
</html>
